Существует перечень курсов, за каждым из которых закреплен преподаватель. 
Студент записывается на один или несколько курсов. 
Преподаватель выставляет студенту оценку за курс и добавляет отзыв.

Course
Teacher
Student

Требования к проекту:

· Микросервисная архитектура на базе akka-http;

1. DAO
2. service, service реализуется с использованием акторов
3. REST

· Данные хранятся в базе, для работы с базой используется slick;

· Приложение должно корректно работать с возможными исключительными ситуациями и логировать их;

· Сериализация/десериализация в json осуществляется с помощью неявных преобразований;

· Приложение логирует обращения к системе в файл. ZIO

Общие требования к функциональности проекта:

· Вход( sign in) и выход( sign out) в/из системы.

· Регистрация.

· Просмотр информации (например: просмотр всех курсов) - GET

· Удаление информации (например: отмена записи на курс) - DELETE

· Добавление и модификация информации (например: редактирование отзыва). POST - PUT

Опционально:

· Возможность импорта данных о курсах из csv-файла с валидацией каждой записи (реализуется с использованием akka-streams). 
Записи csv-файла, прошедшие валидацию импортируются в базу данных. 
Записи csv-файла, не прошедшие валидацию необходимо складывать/логировать в отдельный файл.
